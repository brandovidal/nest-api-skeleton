// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username String   @unique
  password String
  email    String?
  name     String?
  role     Role     @default(USER)
  posts    Post[]
  profile  Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String     @db.Uuid
  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name  String
  posts Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
